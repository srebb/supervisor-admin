<script>
    Vue.component('consumer-row', {
        delimiters: ['${', '}'],
        template: '#consumer-row',
        props: ['consumer', 'serverName', 'serverHash'],
        data() {
            return {api: null};
        },
        mounted() {
            this.api = new Api(this.serverHash);
        },
        methods: {
            stop(consumerName) {
                this.api.stop(consumerName);
            },
            start(consumerName) {
                this.api.start(consumerName);
            },
            restart(consumerName) {
                this.api.restart(consumerName);
            },
            getLog(consumerName) {
                this.api.getFormattedLog(consumerName).then(log => {
                    $('#logModal .log-span').text(log);
                    $('#logModal').modal();
                });
            },
            getErrorLog(consumerName) {
                this.api.getFormattedErrorLog(consumerName).then(log => {
                    $('#logModal .log-span').text(log);
                    $('#logModal').modal();
                });
            },
        }
    });

    Vue.component('server-card', {
        delimiters: ['${', '}'],
        template: '#server',
        props: ['serverName', 'serverHash'],
        data() {
            return {
                consumerList: [],
                serverVersion: null,
                isOnline: false,
                api: null
            }
        },
        mounted() {
            this.api = new Api(this.serverHash);
            this.getSupervisorVersion();
        },
        methods: {
            getConsumerList() {
                this.api.getConsumerList()
                    .then(response => {
                        this.consumerList = response.data;
                        this.isOnline = true;
                        setTimeout(this.getConsumerList, 1000);
                    })
                    .catch(e => {
                        this.isOnline = false;
                        setTimeout(this.getSupervisorVersion, 1000);
                    });
            },
            getSupervisorVersion() {
                this.api.getSupervisorVersion()
                    .then(response => {
                        this.serverVersion = response.data;
                        this.getConsumerList();
                    })
                    .catch(e => {
                        setTimeout(this.getSupervisorVersion, 3000);
                    });
            },
            stopAll() {
                this.api.stopAll();
            },
            startAll() {
                this.api.startAll();
            },
            restartAll() {
                this.api.restartAll();
            },
        }
    });

    const app = new Vue({
        el: '#app',
        data: {
            serverList: [],
            api: null
        },
        created() {
            this.setup();
        },
        methods: {
            setup() {
                this.updateServerList();
            },
            updateServerList() {
                this.api = new Api();

                const _this = this;

                this.api.getServerList().then(response => {
                    const serverList = response.data;

                    const hashes = Object.keys(serverList);

                    let server = [];

                    hashes.forEach(hash => {
                        const currentServer = {
                            hash: serverList[hash].nameHash,
                            name: serverList[hash].serverName,
                        };

                        server.push(currentServer);
                    });

                    this.serverList = server;

                    setTimeout(function () {
                        _this.updateServerList();
                    }, 5000);
                }, e => {
                    setTimeout(function () {
                        _this.updateServerList();
                    }, 5000);
                });
            }
        }
    });
</script>
